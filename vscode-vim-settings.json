{
  // VS Code Vim Extension Settings
  // This configuration mimics your .ideavimrc setup for VS Code
  
  // Basic Vim settings
  "vim.leader": " ",
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-a>": true,
    "<C-b>": true,
    "<C-d>": true,
    "<C-e>": true,
    "<C-f>": true,
    "<C-g>": true,
    "<C-h>": true,
    "<C-i>": true,
    "<C-j>": true,
    "<C-k>": true,
    "<C-l>": true,
    "<C-o>": true,
    "<C-r>": true,
    "<C-s>": true,
    "<C-t>": true,
    "<C-v>": true,
    "<C-w>": true,
    "<C-y>": true,
    "<C-z>": true,
    "<C-[>": true,
    "<C-]>": true,
    "<C-space>": true,
    "<C-u>": true
  },
  
  // Search settings
  "vim.incsearch": true,
  "vim.ignorecase": true,
  "vim.smartcase": true,
  "vim.hlsearch": true,
  
  // UI settings
  "editor.lineNumbers": "relative",
  "vim.showcmd": true,
  "vim.showmodename": true,
  "editor.cursorSurroundingLines": 8,
  "vim.history": 1000,
  "vim.timeout": 10000,
  "vim.visualbell": true,
  
  // Enable vim plugins
  "vim.surround": true,
  "vim.commentary": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 1000,
  "vim.highlightedyank.color": "rgba(86, 71, 151, 0.4)",
  
  // Enable easymotion for which-key like functionality
  "vim.easymotion": true,
  "vim.easymotionKeys": "hklyuiopnm,qwertzxcvbasdgjf",
  
  // Normal mode key mappings
  "vim.normalModeKeyBindingsNonRecursive": [
    // Basic modifications
    { "before": ["U"], "after": ["<C-r>"] },
    { "before": ["n"], "after": ["n", "z", "z", "z", "v"] },
    { "before": ["N"], "after": ["N", "z", "z", "z", "v"] },
    { "before": ["Q"], "after": ["g", "q"] },
    
    // File operations
    { "before": ["<C-s>"], "commands": [":w"] },
    { "before": ["<C-q>"], "commands": [":wq"] },
    
    // Scrolling
    { "before": ["<C-e>"], "after": ["j", "z", "z"] },
    { "before": ["<C-y>"], "after": ["k", "z", "z"] },
    
    // Pane navigation
    { "before": ["<C-h>"], "after": ["<C-w>", "h"] },
    { "before": ["<C-j>"], "after": ["<C-w>", "j"] },
    { "before": ["<C-k>"], "after": ["<C-w>", "k"] },
    { "before": ["<C-l>"], "after": ["<C-w>", "l"] },
    
    // Window management
    { "before": ["<leader>", "w", "v"], "commands": ["workbench.action.splitEditor"] },
    { "before": ["<leader>", "w", "s"], "commands": ["workbench.action.splitEditorDown"] },
    { "before": ["<leader>", "w", "c"], "commands": ["workbench.action.closeActiveEditor"] },
    { "before": ["<leader>", "w", "q"], "commands": ["workbench.action.closeAllEditors"] },
    { "before": ["<leader>", "w", "o"], "commands": ["workbench.action.toggleEditorGroupLayout"] },
    { "before": ["<leader>", "w", "f"], "commands": ["workbench.action.toggleMaximizeEditorGroup"] },
    { "before": ["<leader>", "w", "w"], "commands": ["workbench.action.focusNextGroup"] },
    { "before": ["<leader>", "w", "d"], "commands": ["workbench.action.toggleZenMode"] },
    
    // Tab navigation
    { "before": ["<Tab>"], "commands": ["workbench.action.nextEditor"] },
    { "before": ["<S-Tab>"], "commands": ["workbench.action.previousEditor"] },
    { "before": ["<leader>", "t", "c"], "commands": ["workbench.action.closeActiveEditor"] },
    { "before": ["<leader>", "t", "q"], "commands": ["workbench.action.closeAllEditors"] },
    { "before": ["<leader>", "t", "a"], "commands": ["workbench.action.closeOtherEditors"] },
    { "before": ["<leader>", "t", "p"], "commands": ["workbench.action.pinEditor"] },
    { "before": ["<leader>", "t", "u"], "commands": ["workbench.action.closeUnpinnedEditors"] },
    { "before": ["<leader>", "t", "s"], "commands": ["workbench.action.moveEditorToNextGroup"] },
    
    // File explorer (NERDTree equivalent)
    { "before": ["<leader>", "n", "n"], "commands": ["workbench.view.explorer"] },
    { "before": ["<leader>", "n", "c"], "commands": ["workbench.action.toggleSidebarVisibility"] },
    
    // Tool windows
    { "before": ["<leader>", "m", "1"], "commands": ["workbench.view.explorer"] },
    { "before": ["<leader>", "m", "2"], "commands": ["workbench.view.search"] },
    { "before": ["<leader>", "m", "3"], "commands": ["workbench.view.scm"] },
    { "before": ["<leader>", "m", "4"], "commands": ["workbench.view.debug"] },
    { "before": ["<leader>", "m", "5"], "commands": ["workbench.view.extensions"] },
    { "before": ["<leader>", "m", "t"], "commands": ["workbench.action.terminal.toggleTerminal"] },
    { "before": ["<leader>", "m", "s"], "commands": ["outline.focus"] },
    { "before": ["<leader>", "m", "c"], "commands": ["workbench.action.closePanel"] },
    { "before": ["<leader>", "m", "q"], "commands": ["workbench.action.closeAllGroups"] },
    { "before": ["<leader>", "m", "m"], "commands": ["workbench.action.focusActiveEditorGroup"] },
    
    // Search & Find
    { "before": ["<leader>", "f", "j"], "commands": ["workbench.action.findInFiles"] },
    { "before": ["<leader>", "f", "r"], "commands": ["workbench.action.replaceInFiles"] },
    { "before": ["<leader>", "f", "m"], "commands": ["workbench.action.gotoSymbol"] },
    { "before": ["<leader>", "f", ","], "commands": ["workbench.action.openRecent"] },
    { "before": ["<leader>", "f", "a"], "commands": ["workbench.action.showCommands"] },
    { "before": ["<leader>", "f", "s"], "commands": ["workbench.action.showAllSymbols"] },
    { "before": ["<leader>", "f", "f"], "commands": ["workbench.action.quickOpen"] },
    { "before": ["<leader>", "f", "t"], "commands": ["workbench.action.findInFiles"] },
    
    // Code navigation
    { "before": ["<C-i>"], "commands": ["workbench.action.navigateForward"] },
    { "before": ["<C-o>"], "commands": ["workbench.action.navigateBack"] },
    { "before": ["g", ";"], "commands": ["workbench.action.navigateToLastEditLocation"] },
    { "before": ["]", "]"], "commands": ["editor.action.goToNextSymbolHighlight"] },
    { "before": ["[", "["], "commands": ["editor.action.goToPreviousSymbolHighlight"] },
    { "before": ["]", "e"], "commands": ["editor.action.marker.next"] },
    { "before": ["[", "e"], "commands": ["editor.action.marker.prev"] },
    { "before": ["]", "c"], "commands": ["workbench.action.editor.nextChange"] },
    { "before": ["[", "c"], "commands": ["workbench.action.editor.previousChange"] },
    
    // Symbol navigation
    { "before": ["<leader>", "g", "d"], "commands": ["editor.action.revealDefinition"] },
    { "before": ["<leader>", "g", "f"], "commands": ["editor.action.goToReferences"] },
    { "before": ["<leader>", "g", "u"], "commands": ["editor.action.showHover"] },
    { "before": ["<leader>", "g", "i"], "commands": ["editor.action.goToImplementation"] },
    { "before": ["<leader>", "g", "s"], "commands": ["editor.action.goToTypeDefinition"] },
    
    // Bookmarks
    { "before": ["m", "m"], "commands": ["bookmarks.toggle"] },
    { "before": ["m", "s"], "commands": ["bookmarks.list"] },
    { "before": ["m", "n"], "commands": ["bookmarks.jumpToNext"] },
    { "before": ["m", "p"], "commands": ["bookmarks.jumpToPrevious"] },
    
    // Code assistance
    { "before": ["<C-space>"], "commands": ["editor.action.triggerSuggest"] },
    { "before": ["<C-.>"], "commands": ["editor.action.quickFix"] },
    { "before": ["<C-,>"], "commands": ["editor.action.showHover"] },
    { "before": ["<C-;>"], "commands": ["editor.action.showHover"] },
    { "before": ["<C-f>"], "commands": ["editor.action.peekDefinition"] },
    { "before": ["<leader>", "i", "i"], "commands": ["editor.action.sourceAction"] },
    
    // Code editing
    { "before": ["<leader>", "p", "p"], "commands": ["editor.action.clipboardPasteAction"] },
    { "before": ["<leader>", "p", "h"], "commands": ["editor.action.showClipboardHistory"] },
    { "before": ["<leader>", "c", "c"], "commands": ["editor.action.clipboardCopyAction"] },
    
    // Code folding
    { "before": ["z", "o"], "commands": ["editor.unfold"] },
    { "before": ["z", "r"], "commands": ["editor.unfoldAll"] },
    { "before": ["z", "c"], "commands": ["editor.fold"] },
    { "before": ["z", "m"], "commands": ["editor.foldAll"] },
    { "before": ["z", "a"], "commands": ["editor.toggleFold"] },
    
    // Refactoring
    { "before": ["<leader>", "r", "r"], "commands": ["editor.action.rename"] },
    { "before": ["<leader>", "r", "m"], "commands": ["editor.action.codeAction", {"kind": "refactor.move"}] },
    { "before": ["<leader>", "r", "v"], "commands": ["editor.action.codeAction", {"kind": "refactor.extract.variable"}] },
    { "before": ["<leader>", "r", "f"], "commands": ["editor.action.codeAction", {"kind": "refactor.extract.function"}] },
    
    // Format
    { "before": ["=", "="], "commands": ["editor.action.formatDocument"] },
    { "before": ["=", "w"], "commands": ["editor.action.toggleRenderWhitespace"] },
    { "before": ["=", "f"], "commands": ["editor.action.toggleWordWrap"] },
    
    // Multi cursor
    { "before": ["<leader>", "s", "j"], "commands": ["editor.action.insertCursorBelow"] },
    { "before": ["<leader>", "s", "k"], "commands": ["editor.action.insertCursorAbove"] },
    { "before": ["<leader>", "s", "."], "commands": ["editor.action.addSelectionToNextFindMatch"] },
    { "before": ["<leader>", "s", ","], "commands": ["editor.action.removeSelectionFromPreviousFindMatch"] },
    { "before": ["<leader>", "s", ";"], "commands": ["editor.action.selectHighlights"] },
    
    // Version control
    { "before": ["<leader>", "v", "c"], "commands": ["git.commit"] },
    { "before": ["<leader>", "v", "p"], "commands": ["git.push"] },
    { "before": ["<leader>", "v", "u"], "commands": ["git.pull"] },
    { "before": ["<leader>", "v", "r"], "commands": ["git.revertSelectedRanges"] },
    { "before": ["<leader>", "v", "d"], "commands": ["git.openChange"] },
    
    // Debug
    { "before": ["<leader>", "d", "d"], "commands": ["workbench.action.debug.start"] },
    { "before": ["<leader>", "d", "r"], "commands": ["workbench.action.debug.run"] },
    { "before": ["<leader>", "d", "."], "commands": ["workbench.action.debug.stop"] },
    { "before": ["<leader>", "d", ";"], "commands": ["workbench.action.debug.pause"] },
    { "before": ["<leader>", "d", ","], "commands": ["workbench.action.debug.continue"] },
    { "before": ["<leader>", "d", "l"], "commands": ["workbench.action.debug.stepOver"] },
    { "before": ["<leader>", "d", "j"], "commands": ["workbench.action.debug.stepInto"] },
    { "before": ["<leader>", "d", "k"], "commands": ["workbench.action.debug.stepOut"] },
    { "before": ["<leader>", "x", "x"], "commands": ["editor.debug.action.toggleBreakpoint"] },
    
    // Build
    { "before": ["<leader>", "b", "b"], "commands": ["workbench.action.tasks.build"] }
  ],
  
  // Visual mode key mappings
  "vim.visualModeKeyBindingsNonRecursive": [
    { "before": [">"], "after": [">", "g", "v", "^"] },
    { "before": ["<"], "after": ["<", "g", "v", "^"] },
    { "before": ["p"], "after": ["\"", "_", "d", "P"] },
    { "before": ["<C-j>"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["<C-k>"], "commands": ["editor.action.moveLinesUpAction"] }
  ],
  
  // Insert mode key mappings
  "vim.insertModeKeyBindings": [
    { "before": ["<C-space>"], "commands": ["editor.action.triggerSuggest"] }
  ],
  
  // Additional VS Code settings to match IdeaVim behavior
  "editor.scrollBeyondLastLine": false,
  "editor.find.autoFindInSelection": "multiline",
  "editor.wordWrap": "off",
  "workbench.editor.enablePreview": false,
  "workbench.editor.revealIfOpen": true,
  
  // Which Key extension settings (if you install it)
  "whichkey.delay": 500,
  "whichkey.sortOrder": "alphabetically"
}