[tool.poetry]
name = "fx-ai"
version = "0.1.0"
description = ""
authors = ["XVll <onur@onurx.com>"]
readme = "README.md"
package-mode = false

[tool.poe.tasks]
# Training Tasks
train = "poetry run python main.py"
train-continue = "poetry run python main.py --continue"
quick = "poetry run python main.py --config quick_test"
normal = "poetry run python main.py --config normal_train"
normal-continue = "poetry run python main.py --config normal_train --continue"

# Device-specific training
train-cuda = "poetry run python main.py --device cuda"
train-mps = "poetry run python main.py --device mps"
train-cpu = "poetry run python main.py --device cpu"

# Training with custom configs
train-custom = "poetry run python main.py --config ${config}"

# Momentum Day Scanning
scan = "poetry run python scripts/scan_momentum_days.py --min-quality 0.5"
scan-high = "poetry run python scripts/scan_momentum_days.py --min-quality 0.7"
scan-all = "poetry run python scripts/scan_momentum_days.py --min-quality 0.0"

# Hyperparameter Optimization
sweep = "poetry run python scripts/sweep.py --count 20"
sweep-quick = "poetry run python scripts/sweep.py --count 5"
sweep-long = "poetry run python scripts/sweep.py --count 50"

# Testing
test = "poetry run python -m pytest tests/ -xvs"
test-fast = "poetry run python -m pytest tests/ -x --tb=short"

# Utility Tasks
clean = "rm -rf outputs/* wandb/* __pycache__"
setup = "wandb login"
dashboard = "echo 'Dashboard will auto-launch during training at http://localhost:8051'"
killport = "lsof -ti:8051 | xargs kill -9 || echo 'Port 8051 already free'"
build-index = "poetry run python scripts/scan_momentum_days.py --min-quality 0.0"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = "^2.2.5"
pandas = "^2.2.3"
wandb = "^0.19.11"
gymnasium = "^1.1.1"
matplotlib = "^3.10.3"
databento = "^0.54.0"
poetry-core = ">=1.0.0"
ta = "^0.11.0"
torch = "^2.7.0"
rich = "^14.0.0"
pydantic = "^2.11.5"
setuptools = "==80.8.0"
dash = "^3.0.4"
plotly = "^6.1.1"
tqdm = "^4.67.1"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.0"
pytest = "^7.0"
coverage= "^7.8.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"