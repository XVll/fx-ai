[tool.poetry]
name = "fx-ai"
version = "0.1.0"
description = ""
authors = ["XVll <onur@onurx.com>"]
readme = "README.md"
package-mode = false

[tool.poe.tasks]
# Momentum Training (RECOMMENDED - uses smart day selection and curriculum learning)
momentum = "poetry run python main.py --config training.yaml"
momentum-continue = "poetry run python main.py --config training --continue"
build-index = "poetry run python scripts/build_index.py"

# Legacy Training (standard single-day training)  
quick = "poetry run python main.py --config quick.yaml"
init = "poetry run python main.py"
train = "poetry run python main.py --config training --continue"

# Backtest
backtest = "poetry run python main.py --config backtest"
backtest-date = "poetry run python main.py --config backtest --date {{date}}"

# Scan for momentum days in data
scan = "poetry run python data/scanner/momentum_scanner.py --min-quality 0.5"
scan-high = "poetry run python data/scanner/momentum_scanner.py --min-quality 0.7"
scan-all = "poetry run python data/scanner/momentum_scanner.py --min-quality 0.0"

# Hyperparameter Optimization with Optuna (Centralized Config)
optuna-foundation = "poetry run python run_optuna.py --config optuna --spec optuna-1-foundation"
optuna-reward = "poetry run python run_optuna.py --config optuna --spec optuna-2-reward"
optuna-finetune = "poetry run python run_optuna.py --config optuna --spec optuna-3-finetune"
optuna-dashboard = "optuna-dashboard sqlite:///sweep_studies.db"

# Testing & Linting
test = "poetry run pytest -v"
test-fast = "poetry run pytest --tb=short"
lint = "poetry run pyright ."
lint-fix = "poetry run ruff check --fix ."
format = "poetry run ruff format ."

# Utility Tasks
clean = "rm -rf outputs/* wandb/* __pycache__"
setup = "wandb login"


[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = "^2.2.5"
pandas = "^2.2.3"
wandb = "^0.19.11"
gymnasium = "^1.1.1"
matplotlib = "^3.10.3"
databento = "^0.54.0"
poetry-core = ">=1.0.0"
ta = "^0.11.0"
torch = "^2.7.0"
rich = "^14.0.0"
pydantic = "^2.11.5"
setuptools = "==80.8.0"
dash = "^3.0.4"
plotly = "^6.1.1"
tqdm = "^4.67.1"
optuna = "^4.1.0"
optuna-dashboard = "^0.18.0"
joblib = "^1.4.2"
scikit-learn = "^1.6.0"
captum = "^0.7.0"
pendulum = "^3.1.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.0"
pytest = "^7.0"
coverage= "^7.8.2"
ruff = "^0.11.12"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"